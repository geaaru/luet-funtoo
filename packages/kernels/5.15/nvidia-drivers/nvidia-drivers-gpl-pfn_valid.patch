 kernel-modules.old/common/inc/nv-linux.h kernel-modules/common/inc/nv-linux.h
--- kernel-modules.old/common/inc/nv-linux.h	2024-02-29 08:07:17.802772801 +0000
+++ kernel-modules/common/inc/nv-linux.h	2024-02-29 08:10:31.452772801 +0000
@@ -1984,6 +1984,28 @@
     return nvl->numa_info.use_auto_online;
 }
 
+#if defined(CONFIG_HAVE_ARCH_PFN_VALID) || LINUX_VERSION_CODE < KERNEL_VERSION(5,10,210)
+#  define nv_pfn_valid pfn_valid
+#else
+/* pre-6.1.76 kernel pfn_valid version without GPL rcu_read_lock/unlock() */
+static inline int nv_pfn_valid(unsigned long pfn)
+{
+        struct mem_section *ms;
+
+        if (PHYS_PFN(PFN_PHYS(pfn)) != pfn)
+                return 0;
+
+        if (pfn_to_section_nr(pfn) >= NR_MEM_SECTIONS)
+                return 0;
+
+        ms = __pfn_to_section(pfn);
+        if (!valid_section(ms))
+                return 0;
+
+        return early_section(ms) || pfn_section_valid(ms, pfn);
+}
+#endif
+
 typedef struct {
     NvU64 base;
     NvU64 size;
diff -rua kernel-modules.old/nvidia/nv-mmap.c kernel-modules/nvidia/nv-mmap.c
--- kernel-modules.old/nvidia/nv-mmap.c	2024-02-29 08:07:17.932772801 +0000
+++ kernel-modules/nvidia/nv-mmap.c	2024-02-29 08:08:57.216772801 +0000
@@ -577,12 +577,12 @@
             //
             // This path is similar to the sysmem mapping code.
             // TODO: Refactor is needed as part of bug#2001704.
-            // Use pfn_valid to determine whether the physical address has
+            // Use nv_pfn_valid to determine whether the physical address has
             // backing struct page. This is used to isolate P8 from P9.
             //
             if ((nv_get_numa_status(nvl) == NV_NUMA_STATUS_ONLINE) &&
                 !IS_REG_OFFSET(nv, access_start, access_len) &&
-                (pfn_valid(PFN_DOWN(mmap_start))))
+                (nv_pfn_valid(PFN_DOWN(mmap_start))))
             {
                 ret = nvidia_mmap_numa(vma, mmap_context);
                 if (ret)
diff -rua kernel-modules.old/nvidia/os-mlock.c kernel-modules/nvidia/os-mlock.c
--- kernel-modules.old/nvidia/os-mlock.c	2024-02-29 08:07:17.939772801 +0000
+++ kernel-modules/nvidia/os-mlock.c	2024-02-29 08:08:31.004772801 +0000
@@ -113,7 +113,7 @@
     for (i = 0; i < page_count; i++)
     {
         if ((nv_follow_pfn(vma, (start + (i * PAGE_SIZE)), &pfn) < 0) ||
-            (!pfn_valid(pfn)))
+            (!nv_pfn_valid(pfn)))
         {
             rmStatus = NV_ERR_INVALID_ADDRESS;
             break;
@@ -187,7 +187,7 @@
         goto done;
     }
 
-    if (pfn_valid(pfn))
+    if (nv_pfn_valid(pfn))
     {
         rmStatus = get_io_pages(vma, start, page_count, (struct page **)result_array);
         if (rmStatus == NV_OK)
